Question 1

From the wine DataFrame, select the columns country and price.
Complete the code to return the output
subset_wine = wine[['country', 'price']]

print(subset_wine.head())


Question 2

you work for a second hand car sales company, and they want to know the relationship between the age and the value so that they can estimate the best price to sell 
their cars at. Create a plot to show the relationship, identifying the miles per gallon (mpg) by changing the size of each point. The valuation data is previewed below.

import matplotlib.pyplot as plt
import seaborn as sns

sns.scatterplot(x = "age", y = "value", size = "mpg", data = valuation)

plt.show()


Question 3

Calculate the variance and standard deviation of the array x.
Complete the code to return the output
x = np.array([2.2, 0.9, 4.4, 6.7, 2.8, 3.2, 1.1, 3.5])
x_var = np.var(x)
x_stdev = np.std(x)
print('Variance: {:4.2f}'.format(x_var))
print('Std Deviation: {:4.2f}'.format(x_stdev))


Question 4

Below is a sample of closing prices for Amazon stock during February of 2013, contained in the DataFrame amazon. 
Within the DataFrame are two columns: date, which gives the day in date format, and the corresponding close price for each day. 
Create a line plot of this data.

      date      close
2013-02-08    261.950
2013-02-11    257.210
2013-02-12    258.700
2013-02-13    269.470
2013-02-14    269.240

Complete the code to return the output
import matplotlib.pyplot as plt
import seaborn as sns

sns.lineplot(
  x='date', 
  y='close', 
  data=amazon)

plt.xticks(rotation = 45)
plt.show()


Question 5

Calculate the inter-quartile range of the age of 100 customers who have recently bought products from your website. age is a numpy array.
Complete the code to return the output
from scipy import stats

iqr_age = stats.iqr(age)

print(iqr_age)


Question 6

The food DataFrame contains nutritional information about six menu items from a restaurant. Print the row index of the data.
Complete the code to return the output

print(food.index)

Expected Output
Index(['waffles', 'tacos', 'lasagne', 'croissant', 'chicken salad', 'thai curry'], dtype='object', name='item')


Question 7

Following a trial of a new treatment, you wish to create a plot of the change over the time of the trial (week) of the patient response (resp). 
The patient data is shown below.

   week  resp
0     0    91
1     1    89
2     2    82
3     3    75
4     4    59
5     5    53
Complete the code to return the output

import matplotlib.pyplot as plt
import seaborn as sns

sns.lineplot(x = 'week', y = 'resp', data = patient)

plt.show()


Question 8

Create a swarm plot of value as a function of measurement. Use the color to indicate the species. The data is contained in the iris DataFrame.

--iris
      species    measurement   value
0     setosa     sepal_length  5.1
1     setosa     sepal_length  4.9
...
598   virginica  petal_width   4.6
599   virginica  petal_width   5.0
Complete the code to return the output
import matplotlib.pyplot as plt
import seaborn as sns

ax = sns.swarmplot(x="measurement", 
                   y="value",  
                   hue="species", 
                   data=iris)


Question 9

You have been given the food data to analyze, it's already loaded for you and stored in a DataFrame. 
Before you get started you want to quickly see some summary statistics for each of the three columns in the data. Calculate and print these statistics.
Complete the code to return the output
print(food.describe())
Expected Output
        energy  protein  carbohydrate
count    6.000    6.000         6.000
mean   187.833    6.813        24.662
std     86.071    3.621        19.586
min    106.000    3.180         8.000
25%    127.500    4.468        10.857
50%    184.000    5.355        17.550
75%    197.000    9.633        32.642
max    343.000   11.760        58.570


Question 10

You have access to a large DataFrame employee, but your manager has requested an anonymized subset, containing only the employee_id and salary of each employee.

Create a DataFrame private_employee containing only these two columns.

    employee_id   first_name  gender  salary
0          1ex5        Linda  female    3400
1          73fd        Steve    male    5000
2          ei10        Henry    male   12400
3          b45e         Sara  female    7600
Complete the code to return the output
private_employee = employee[['employee_id', 'salary']]

print(private_employee)


Question 11

Return the Pandas DataFrame df shown below with the smallest salary value appearing first in the data frame.

     first name   gender     salary  
0         Linda   female       3400  
1         Steve     male       5000 
2         Henry     male      12400
3          Sara   female       7600  
Complete the code to return the output
result = df.sort_values('salary', ascending = True)

print(result)


Question 12

Consider the Pandas DataFrame df below.

      Month  Count
zero    Jan     52
one     Apr     29
two     Mar     46
three   Feb      3
Complete the code to return the output
print(df.loc['two':])

Question 13

Two of the columns in the heart DataFrame have very long names. Rename the columns using the provided dictionary.
Complete the code to return the output
import pandas as pd

column_names = {
	'slope_of_peak_exercise_st_segment': 'slope',
	'fasting_blood_sugar_gt_120_mg_per_dl': 'fbs' 
}

heart_clean = heart.rename(columns=column_names)
print(heart_clean.head())


Question 14

Subset the Pandas DataFrame df to return all rows with a weight greater than 175.

     species   name  weight
0       lion  Sally     121
1      tiger  Henry     228
2       lion   Tony     177
3      tiger   Lucy     165
Complete the code to return the output
print(df[df['weight']>175])


Question 15

Consider the Pandas DataFrame df below. Filter it appropriately so that it outputs the shown results.

     gh owner language      repo  stars
0  pandas-dev   python    pandas  17800
1   tidyverse        R     dplyr   2800
2   tidyverse        R   ggplot2   3500
3      has2k1   python  plotnine   1450
Complete the code to return the output
print(df[df["stars"]==1450])

